<launch>

  <include file="$(find pr2_gazebo)/launch/pr2_empty_world.launch">
    <arg name="KINECT2" value="true" />
  </include>

  <include file="$(find pr2eus_tutorials)/launch/gazebo/spawn_objects.launch"/>

  <!-- <include file="$(find teleop_dual_arm)/launch/pr2_screenpoint_teleop.launch"/> -->

  
  <machine name="localhost" address="localhost" />
  <!-- <arg name="cloud_machine" default="localhost" doc="point cloud processor machine" /> -->
  <!-- <arg name="display_machine" default="localhost" doc="display client machine" /> -->
  <arg name="base_frame" default="head_mount_kinect2_rgb_optical_frame" />
  <arg name="image" default="/head_mount_kinect2/rgb" doc="image namespace" />
  <arg name="image_type" default="image_raw" doc="image type" />
  <arg name="points" default="/head_mount_kinect2/depth_registered/points" doc="point cloud" />
  <!-- <arg name="USE_VIEW" default="true" doc="if true, launch image_view2 on $(arg display_machine)" /> -->
  <!-- <arg name="USE_RVIZ" default="false" doc="if true, launch rviz on $(arg display_machine)" /> -->
  <!-- <arg name="PUBLISH_BASE_FOOTPRINT" default="false" doc="publish tf from base_footprint to camera" /> -->
  <!-- <arg name="publish_base_footprint_camera_frame" default="camera_link" doc="frame used for publish tf from base_footprint to camera" /> -->

  <!-- launch/pointcloud_screenpoint.launch -->
  <include file="$(find jsk_pcl_ros)/launch/pointcloud_screenpoint.launch">
    <!-- <arg name="cloud_machine" default="$(arg cloud_machine)"/> -->
    <!-- <arg name="display_machine" default="$(arg display_machine)"/> -->
    <arg name="image" default="$(arg image)"/>
    <arg name="image_type" default="$(arg image_type)"/>
    <arg name="points" default="$(arg points)"/>
    <arg name="USE_DEPTH_CREATER" default="false" />
    <arg name="USE_REGISTERED_DEPTH" default="true"/>
    <arg name="USE_VIEW" default="false"/>
  </include>

  <!-- publish markers, broadcast TF -->
  <node name="display_point" pkg="jsk_pcl_ros" machine="localhost"
        type="pointcloud_screenpoint.l" output="screen">
    <rosparam subst_value="true">
      base_frame: $(arg base_frame)
      sensor_topic: $(arg image)/$(arg image_type)
      ray_srv: /pointcloud_screenpoint_nodelet/screen_to_point
    </rosparam>
  </node>

  <!-- needed for awake ConnectionBasedNodelet (or set ~always_subscribe)-->
  <node pkg="rostopic" type="rostopic" name="dummy_subscribe" args="echo /pointcloud_screenpoint_nodelet/output_point"/>

  <node pkg="jsk_topic_tools" type="tf_to_pose.py" name="tf_to_pose">
    <remap from="~output" to="dual_arm_center"/>
    <rosparam>
      src_frame: base_link
      dst_frame: /ray_target
      rate: 100
    </rosparam>
  </node>

  <node pkg="teleop_dual_arm" type="PR2ScreenPoint2DualArmPose2.py" name="PR2ScreenPoint2DualArmPose"/>

  <node pkg="teleop_dual_arm" type="pr2-realtime-ik.l" name="pr2_realtime_ik" output="log"/>


  
  
  <include file="$(find rwt_image_view)/launch/rwt_image_view.launch"/>

  
</launch>
